@model Invoice
@{
    ViewData["Title"] = SR["Invoice Edit"].Value;

}

<h1>@ViewData["Title"]</h1>

<form id="edit-invoice-form" asp-action="@nameof(InvoiceController.Edit)" asp-controller="@nameof(InvoiceController).RemoveController()" method="post">
    <div asp-validation-summary="All" class="text-danger"></div>
    <input asp-for="Id" type="hidden" />
    <input name="isAddItem" type="hidden" value="false" />
    <div class="row mt-3">
        <div class="form-group col-12 col-md-3">
            <label for="Number">@Model.DisplayNameFor(x => x.Number, localizerFactory)</label>
            <input asp-for="Number" class="form-control" />
            <span asp-validation-for="Number" class="text-danger"></span>
        </div>
        <div class="form-group col-12 col-md-3">
            <label for="DateTime">@Model.DisplayNameFor(x => x.DateTime, localizerFactory)</label>
            <input asp-for="DateTime" class="form-control" />
            <span asp-validation-for="DateTime" class="text-danger"></span>
        </div>
        <div class="form-group col-12 col-md-3">
            <label for="Type" class="control-label">@Model.DisplayNameFor(x => x.Type, localizerFactory)</label>
            <select asp-for="Type" class="form-control">
                @foreach (var invoiceType in Enum.GetValues(typeof(InvoiceType)))
                {
                    <option value="@((int)invoiceType)">@invoiceType.ToLocalizedString(localizerFactory)</option>
                }
            </select>
            <span asp-validation-for="Type" class="text-danger"></span>
        </div>
        <div class="form-group col-12 col-md-3">
            <label for="Tax">@Model.DisplayNameFor(x => x.Tax, localizerFactory)</label>
            <input asp-for="Tax" class="form-control" />
            <span asp-validation-for="Tax" class="text-danger"></span>
        </div>
        <div class="form-group col-12 col-md-3">
            <label for="MainInvoiceId" class="control-label">@Model.DisplayNameFor(x => x.MainInvoiceId, localizerFactory)</label>
            <select asp-for="MainInvoiceId" ds-controller="@nameof(InvoiceController).RemoveController()" ds-model-type="@typeof(Invoice)" ds-name="main-invoice-select"></select>
            <span asp-validation-for="MainInvoiceId" class="text-danger"></span>
        </div>
    </div>
    <div class="row mt-3">
        <div class="form-group col-12 col-md-3">
            <label for="BuyerId">@Model.DisplayNameFor(x => x.BuyerId, localizerFactory)</label>
            <select asp-for="BuyerId" ds-controller="@nameof(InvoiceController).RemoveController()" ds-model-type="@typeof(AppUser)" ds-name="buyer-select"></select>
            <span asp-validation-for="BuyerId" class="text-danger"></span>
        </div>
    </div>

    <div class="row mt-5">
        <div class="form-group col-12 col-md-3">
            <label for="item-select">@Model.DisplayNameFor(x => x.InvoiceItems, localizerFactory)</label>
            <p class="text-black-50">نام یک محصول را وارد کنید یا یک محصول جدید بسازید.</p>
            <select name="selectedItem" ds-controller="@nameof(InvoiceController).RemoveController()" ds-model-type="@typeof(AppUser)" ds-name="item-select"
                    allow-new-value="true"></select>
            <button id="add-item-button" class="btn btn-success mt-1" type="button"><i class="fa fa-plus"></i>اضافه کردن محصول انتخاب شده</button>
            <span class="text-danger"></span>
        </div>
        <div class="form-group col-12 col-md-12 mt-3">
            @{
                string[] propertieToShow = [
                nameof(InvoiceItem.Item)+'.'+nameof(InvoiceItem.Item.Name),
            nameof(InvoiceItem.Item)+'.'+nameof(InvoiceItem.Item.MeasuringUnit),
            nameof(InvoiceItem.UnitPrice),
            nameof(InvoiceItem.Amount),
            nameof(InvoiceItem.Off),
                ];
            }
            <table ds-name="edit-invoice-items"
                   ds-controller="@nameof(InvoiceController).RemoveController()"
                   ds-model-type="typeof(InvoiceItem)"
                   ds-properties-to-show="propertieToShow"
                   ds-route-values="@(new []{new KeyValuePair<string,object>("invoiceId",Model.Id)})"
                   ds-post-columns="2"
                   ds-rows-per-page="100"></table>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-2">
            <button id="edit-invoice-form-submit" type="submit" class="btn btn-primary">@SR["Submit"]</button>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        let isAddItem = false;
        $('#add-item-button').on('click',()=>{
            $('input[name=isAddItem]').val(true);
            isAddItem = true;
            $('#edit-invoice-form').submit();
        });
        $('#edit-invoice-form-submit').on('click',()=>{
            $('input[name=isAddItem]').val(false);
            isAddItem = false;
        });
        $(document).ready(()=>{
            $('#edit-invoice-form').on('submit',(e)=>{
                if(isAddItem){
                    e.preventDefault();
                    var form = e.currentTarget;
                    var data = new FormData(form);

                    $.ajax({
                        url: form.action,
                        type: form.method,
                        data: data,
                        processData: false,
                        contentType: false,
                        success: function (data, status) {
                            if(Boolean(data.success)){
                                $('#edit-invoice-form').find('input[name=Id]').first().val(data.invoiceId);
                                $('#edit-invoice-items').data('ds-route-values',[{Key:"invoiceId",Value:data.invoiceId}])
                                DSGetTableData($('#edit-invoice-items'));
                            }
                        },
                        error: function (xhr, desc, err) {

                        }
                    })
                }
            });
        });
    </script>
    <script>
        $(document).on('input','.input-edit-item',(e)=>{
            var row = $(e.currentTarget).parent().parent();
            var unitPrice = row.find('input[name=UnitPrice]').val();
            var amount = row.find('input[name=Amount]').val();
            var off = row.find('input[name=Off]').val();

            row.find('.edit-item-row-total').text(
                new Intl.NumberFormat("fa-IR", { style: "currency", currency: "IRR" }).format(
                unitPrice * amount * (1 - (off / 100)),
            ));
        })
        $(document).on('click','.btn-edit-item-submit',(e)=>{
            var row = $(e.currentTarget).parent().parent();
            var id = row.find('input[name=Id]').val();
            var measuringUnit = row.find('input[name=MeasuringUnit]').val();
            var unitPrice = row.find('input[name=UnitPrice]').val();
            var amount = row.find('input[name=Amount]').val();
            var off = row.find('input[name=Off]').val();

            var formData = new FormData();
            formData.append('id',id)
            formData.append('measuringUnit',measuringUnit)
            formData.append('unitPrice',unitPrice)
            formData.append('amount',amount)
            formData.append('off',off)

            $.ajax({
                url: '@Url.ActionLink(nameof(InvoiceController.EditInvoiceItem), nameof(InvoiceController).RemoveController())',
                type: 'post',
                data: formData,
                processData: false,
                contentType: false,
                success: function (data, status) {
                    if(Boolean(data.success)){
                        Toast('@SR["Success"]','@SR["Changes applied successfuly."]','success');
                    }else{
                        Toast('@SR["Fail"]','@SR["Failed to apply changes."]','danger');
                    }
                },
                error: function (xhr, desc, err) {
                        Toast('@SR["Fail"]','@SR["Check your internet connection"]','danger');
                }
            })
        })
        $(document).on('click','.btn-remove-item',(e)=>{
            var row = $(e.currentTarget).parent().parent();
            var id = row.find('input[name=Id]').val();

            var formData = new FormData();
            formData.append('invoiceItemId',id)

            $.ajax({
                url: '@Url.ActionLink(nameof(InvoiceController.DeleteInvoiceItem), nameof(InvoiceController).RemoveController())',
                type: 'post',
                data: formData,
                processData: false,
                contentType: false,
                success: function (data, status) {
                    if(Boolean(data.success)){
                        DSGetTableData($('#edit-invoice-items'));
                        Toast('@SR["Success"]','@SR["Changes applied successfuly."]','success');
                    }else{
                        Toast('@SR["Fail"]','@SR["Failed to apply changes."]','danger');
                    }
                },
                error: function (xhr, desc, err) {
                        Toast('@SR["Fail"]','@SR["Check your internet connection"]','danger');
                }
            })
        });
    </script>
}